{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","corpId","window","location","href","split","userId","sessionStorage","getItem","dd","permission","requestAuthCode","onSuccess","result","axios","get","code","then","response","setItem","data","userid","deptIdList","catch","error","alert","JSON","stringify","onFail","err","className","onClick","url","method","headers","fileName","fileId","console","log","taskId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LA6GeA,MApGf,WAEI,IAAMC,EAASC,OAAOC,SAASC,KAAKC,MAAM,KAAK,GAE3CC,EAASC,eAAeC,QAAQ,UAiFpC,OA5BAC,SAAS,WAELA,UAAWC,WAAWC,gBAAgB,CAClCV,OAAQA,EACRW,UAAW,SAAUC,GAEjBC,IAAMC,IAAa,iBAAmBd,EAAS,aAAeY,EAAOG,MAChEC,MAAK,SAAAC,GAMFX,eAAeY,QAAQ,SAAUD,EAASE,KAAKA,KAAKC,QACpDd,eAAeY,QAAQ,SAAUD,EAASE,KAAKA,KAAKE,WAAW,OAElEC,OAAM,SAAAC,GACHC,MAAMC,KAAKC,UAAUH,QAKjCI,OAAQ,SAAUC,GACdJ,MAAMC,KAAKC,UAAUE,UAM7B,sBAAKC,UAAU,MAAf,UAEI,wBAAQC,QAlFG,WAEfjB,IAAM,CACFkB,IAAc,+BAAiC/B,EAC/CgC,OAAQ,OACRb,KAAM,GACNc,QAAS,CACL,eAAgB,sBAErBjB,MAAK,SAAUC,GACdO,MAAMC,KAAKC,UAAUT,IACrBX,eAAeY,QAAQ,WAAYD,EAASE,KAAKA,KAAKe,UACtD5B,eAAeY,QAAQ,SAAUD,EAASE,KAAKA,KAAKgB,WACrDb,OAAM,SAAUC,GACfa,QAAQC,IAAId,OAoEZ,sCACA,wBAAQO,QAjEW,WACvB,IAAIX,EAAO,CACP,WAAcnB,EACd,OAAUK,EACV,SAAYC,eAAeC,QAAQ,YACnC,OAAUD,eAAeC,QAAQ,WAGrCM,IAAM,CACFkB,IAAc,sBACdC,OAAQ,OACRb,KAAMA,EACNc,QAAS,CACL,eAAgB,sBAErBjB,MAAK,SAAUC,GACdO,MAAMC,KAAKC,UAAUT,IACrBX,eAAeY,QAAQ,SAAUD,EAASE,KAAKA,KAAKmB,WACrDhB,OAAM,SAAUC,GACfa,QAAQC,IAAId,OA8CZ,kDACA,wBAAQO,QA3Ca,WAEzBjB,IAAe,uBAAyBP,eAAeC,QAAQ,UAAY,oBAAsBP,GAC/FgB,MAAK,SAAUC,GACbO,MAAMC,KAAKC,UAAUT,OACtBK,OAAM,SAAUC,GACfa,QAAQC,IAAId,OAqCZ,oFCvFGgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.8ecbe7df.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nexport const domain = \"\";\n\nfunction App() {\n\n    const corpId = window.location.href.split(\"=\")[1]\n\n    let userId = sessionStorage.getItem(\"userId\");\n\n    const uploadFile = () => {\n        // 创建签署流程\n        axios({\n            url: domain + '/esign/corp/file?authCorpId=' + corpId,\n            method: 'post',\n            data: {},\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            alert(JSON.stringify(response));\n            sessionStorage.setItem(\"fileName\", response.data.data.fileName)\n            sessionStorage.setItem(\"fileId\", response.data.data.fileId)\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    const createESignProcess = () => {\n        let data = {\n            \"authCorpId\": corpId,\n            \"userId\": userId,\n            \"fileName\": sessionStorage.getItem(\"fileName\"),\n            \"fileId\": sessionStorage.getItem(\"fileId\")\n        };\n        // 创建签署流程\n        axios({\n            url: domain + '/esign/corp/process',\n            method: 'post',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            alert(JSON.stringify(response));\n            sessionStorage.setItem(\"taskId\", response.data.data.taskId)\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    const getESignProcessFiles = () => {\n        // 获取签署完成的合同列表\n        axios(domain + '/esign/corp/process/' + sessionStorage.getItem(\"taskId\") + '/docs?authCorpId=' + corpId\n        ).then(function (response) {\n            alert(JSON.stringify(response));\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    dd.ready(function () {\n        // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n        dd.runtime.permission.requestAuthCode({\n            corpId: corpId, //三方企业ID\n            onSuccess: function (result) {\n                // alert(JSON.stringify(result));\n                axios.get(domain + \"/login?corpId=\" + corpId + \"&authCode=\" + result.code)\n                    .then(response => {\n                        // alert(JSON.stringify(response));\n                        // alert(JSON.stringify(response.data));\n                        // alert(JSON.stringify(response.data.data.userid));\n                        // alert(JSON.stringify(response.data.data.deptIdList[0]));\n                        // 登录成功后储存用户部门和ID\n                        sessionStorage.setItem(\"userId\", response.data.data.userid);\n                        sessionStorage.setItem(\"deptId\", response.data.data.deptIdList[0]);\n                    })\n                    .catch(error => {\n                        alert(JSON.stringify(error))\n                        // console.log(error.message)\n                    })\n\n            },\n            onFail: function (err) {\n                alert(JSON.stringify(err))\n            }\n        });\n    });\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            <button onClick={uploadFile}>上传文件</button>\n            <button onClick={createESignProcess}>创建签署流程</button>\n            <button onClick={getESignProcessFiles}>获取签署完成的合同列表</button>\n            {/*</header>*/}\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={}>获取提交的审批信息</button>*/}\n            {/*</header>*/}\n        </div>\n    );\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}