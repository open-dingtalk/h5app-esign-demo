{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["corpId","window","location","href","split","dd","permission","requestAuthCode","onSuccess","result","axios","get","code","then","response","sessionStorage","setItem","data","userid","deptIdList","catch","error","alert","JSON","stringify","onFail","err","App","userId","getItem","className","onClick","url","method","headers","taskId","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAUMA,EAASC,OAAOC,SAASC,KAAKC,MAAM,KAAK,GA+C/CC,SAAS,WAELA,UAAWC,WAAWC,gBAAgB,CAClCP,OAAQA,EACRQ,UAAW,SAAUC,GAEjBC,IAAMC,IAAa,iBAAmBX,EAAS,aAAeS,EAAOG,MAChEC,MAAK,SAAAC,GAMFC,eAAeC,QAAQ,SAAUF,EAASG,KAAKA,KAAKC,QACpDH,eAAeC,QAAQ,SAAUF,EAASG,KAAKA,KAAKE,WAAW,OAElEC,OAAM,SAAAC,GACHC,MAAMC,KAAKC,UAAUH,QAKjCI,OAAQ,SAAUC,GACdJ,MAAMC,KAAKC,UAAUE,UAKlBC,MAzEf,WAEI,IAAIC,EAASb,eAAec,QAAQ,UA6BpC,OACI,sBAAKC,UAAU,MAAf,UAEI,wBAAQC,QA9BW,WAEvBrB,IAAM,CACFsB,IAAc,kCAAoChC,EAAS,WAAa4B,EACxEK,OAAQ,OACRhB,KAAM,GACNiB,QAAS,CACL,eAAgB,sBAErBrB,MAAK,SAAUC,GACdQ,MAAMC,KAAKC,UAAUV,IACrBC,eAAeC,QAAQ,SAAUF,EAASG,KAAKA,KAAKkB,WACrDf,OAAM,SAAUC,GACfe,QAAQC,IAAIhB,OAiBZ,kDACA,wBAAQU,QAda,WAEzBrB,IAAe,uBAAyBK,eAAec,QAAQ,UAAY,oBAAsB7B,GAC/Fa,MAAK,SAAUC,GACbQ,MAAMC,KAAKC,UAAUV,OACtBM,OAAM,SAAUC,GACfe,QAAQC,IAAIhB,OAQZ,oFCnCGiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d230f736.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\nimport getItem$ from \"dingtalk-jsapi/api/util/domainStorage/getItem\";\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nexport const domain = \"\";\n\nconst corpId = window.location.href.split(\"=\")[1]\n\nfunction App() {\n\n    let userId = sessionStorage.getItem(\"userId\");\n\n    const createESignProcess = () => {\n        // 创建审批流程\n        axios({\n            url: domain + '/esign/corp/process?authCorpId=' + corpId + '&userId=' + userId,\n            method: 'post',\n            data: {},\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            alert(JSON.stringify(response));\n            sessionStorage.setItem(\"taskId\", response.data.data.taskId)\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    const getESignProcessFiles = () => {\n        // 获取签署完成的合同列表\n        axios(domain + '/esign/corp/process/' + sessionStorage.getItem(\"taskId\") + '/docs?authCorpId=' + corpId\n        ).then(function (response) {\n            alert(JSON.stringify(response));\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            <button onClick={createESignProcess}>创建签署流程</button>\n            <button onClick={getESignProcessFiles}>获取签署完成的合同列表</button>\n            {/*</header>*/}\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={}>获取提交的审批信息</button>*/}\n            {/*</header>*/}\n        </div>\n    );\n};\n\n\ndd.ready(function () {\n    // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n    dd.runtime.permission.requestAuthCode({\n        corpId: corpId, //三方企业ID\n        onSuccess: function (result) {\n            // alert(JSON.stringify(result));\n            axios.get(domain + \"/login?corpId=\" + corpId + \"&authCode=\" + result.code)\n                .then(response => {\n                    // alert(JSON.stringify(response));\n                    // alert(JSON.stringify(response.data));\n                    // alert(JSON.stringify(response.data.data.userid));\n                    // alert(JSON.stringify(response.data.data.deptIdList[0]));\n                    // 登录成功后储存用户部门和ID\n                    sessionStorage.setItem(\"userId\", response.data.data.userid);\n                    sessionStorage.setItem(\"deptId\", response.data.data.deptIdList[0]);\n                })\n                .catch(error => {\n                    alert(JSON.stringify(error))\n                    // console.log(error.message)\n                })\n\n        },\n        onFail: function (err) {\n            alert(JSON.stringify(err))\n        }\n    });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}